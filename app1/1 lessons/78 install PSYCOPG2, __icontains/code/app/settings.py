"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

from django.conf.global_settings import MEDIA_ROOT, MEDIA_URL

# from django.conf.global_settings import STATICFILES_DIRS

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(=d(z&huoy6vzhw!h4ko@0gjm=4e^fp&9tanm1q491hd+hak^v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    "debug_toolbar",

    'goods',
    'main',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    "debug_toolbar.middleware.DebugToolbarMiddleware",
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE'    :   'django.db.backends.postgresql',
        #! 1) Öz DB-simizi yaratdıqdan sonra həmin DB-in adını, parolunu, istifadəçi adını SETTİNGS.PY faylındaki lazımlı atributlar olan yerə yazırıq.  Bunlari etdikden sonra ise,
        #!    DJANGO ile DB-si əlaqələndirmək lazımdır. Yəni, aralarında bağlantı, qoşulma yaratmaq lazımdır. Bunun üçün, isə 74-cü dərsdə qeyd etdiyimiz 2 paketdən 1sini quraşdırmalıyıq. 
        #!    bu paketin adı PSYCOPG yaxud PSYCOPG2 paketidir. Biz PSYCOPG2 paketini qurasdiracagiq:   pip install psycopg2,   Eger MACOs olarsa onda:   sudo pip install psycopg2-binary
        'NAME'      :   'home',
        'USER'      :   'home',   
        'PASSWORD'  :   'home',       
        'HOST'      :   'localhost',  
        'PORT'      :   '5432',       
    }
}
#! 2)  PSYCOPG2 yukledikden sonra migration-lari qurasdirmaq lazimdir. Bunu evvelde etmisdik. Onun ucun ilk once yaziriq:
#                                                                                                                           python manage.py makemigrations
#                                                                                                                           python manage.py migrate           - bunu yazdiqda cedvel yaranacaq DB-de.
#                                                                                                                           python manage.py createsuperuser   - sonra admin panel ucun USER yaradiriq (root,root,root,Y)

#! 3) Indi ise, fiksturalarimizi DB-se yuklemeliyik. FIXTURES icinde yadiniza gelirse melumatlar var idi hansi ki, manual olara cedveli doldurmaga dusmeyek deye butun bu melumatlari FIXTURES icinde saxlamışdıq:
# python manage.py loaddata fixtures/goods/categories.json
# python manage.py loaddata fixtures/goods/products.json

#! 4) Proqramı işə salaraq işləyib-işləmədiyini yoxlayarıqı.  


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'


STATICFILES_DIRS = [
    BASE_DIR / 'static',
    ]




MEDIA_URL = 'media/'   
MEDIA_ROOT = BASE_DIR / 'media'




INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'